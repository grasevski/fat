name: Build

on:
  push: {branches: [main]}
  pull_request: {branches: [main]}

env:
  CARGO_TERM_COLOR: always
  LIBTORCH_URL: https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-1.9.0%2Bcpu.zip
  LIBTORCH_DST: libtorch-cxx11-abi-shared-with-deps-1.9.0+cpu.zip
  HYPE_URL: https://github.com/grasevski/hype/releases/download/latest/hype

jobs:
  mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - run: cargo build --release
    - uses: actions/upload-artifact@v2
      with: {name: fat-mac, path: target/release/fat}
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - run: cargo build --release
    - uses: actions/upload-artifact@v2
      with: {name: fat.exe, path: target/release/fat.exe}
  build:
    needs: [mac, windows]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: wget "$LIBTORCH_URL"
    - run: unzip "$LIBTORCH_DST"
    - run: LIBTORCH="$(pwd)/libtorch" LD_LIBRARY_PATH="$(pwd)/libtorch/lib:$LD_LIBRARY_PATH" ./build.sh
    - uses: actions/upload-artifact@v2
      with: {name: fat, path: target/release/fat}
    - uses: actions/upload-artifact@v2
      with: {name: score.json, path: score.json}
  tune:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: wget "$LIBTORCH_URL"
    - run: unzip "$LIBTORCH_DST"
    - run: wget "$HYPE_URL"
    - run: chmod +x hype
    - run: LIBTORCH="$(pwd)/libtorch" LD_LIBRARY_PATH="$(pwd)/libtorch/lib:$LD_LIBRARY_PATH" ./hype -m "$(cat hype.json)" -- ./hype.sh -d 1s | tee tune.csv
    - uses: actions/upload-artifact@v2
      with: {name: tune.csv, path: tune.csv}
  delay:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: wget "$LIBTORCH_URL"
    - run: unzip "$LIBTORCH_DST"
    - run: wget "$HYPE_URL"
    - run: chmod +x hype
    - run: LIBTORCH="$(pwd)/libtorch" LD_LIBRARY_PATH="$(pwd)/libtorch/lib:$LD_LIBRARY_PATH" ./hype -m "$(cat hype.json)" -- ./hype.sh -d 1d | tee delay.csv
    - uses: actions/upload-artifact@v2
      with: {name: delay.csv, path: delay.csv}
  release:
    needs: [tune, delay]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      with: {name: fat-mac}
    - run: mv fat fat-mac
    - uses: actions/download-artifact@v2
      with: {name: fat}
    - uses: actions/download-artifact@v2
      with: {name: fat.exe}
    - uses: actions/download-artifact@v2
      with: {name: score.json}
    - uses: actions/download-artifact@v2
      with: {name: tune.csv}
    - uses: actions/download-artifact@v2
      with: {name: delay.csv}
    - uses: marvinpinto/action-automatic-releases@latest
      if: github.ref == 'refs/heads/main'
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: latest
        files: |
          LICENSE.txt
          fat
          fat-mac
          fat.exe
          score.json
          tune.csv
          delay.csv
